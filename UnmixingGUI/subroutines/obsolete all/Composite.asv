function varargout = Composite(organList, myTitle, threshold, subplotSize)
% function varargout = Composite(organList, myTitle, threshold,
% subplotSize)
%
% Puropose: To present, in a nice colorful way, organs of a mouse.
% 'organList' stack containes images of organs. Function calculates
% and presents 'compositeImage' and 'thresholdedImage' that are images of a 
% whole mouse with organs maped.
% Uses 'threshold' to obtain 'thresholdedImage' (default
% 0.4). subplotSize default is [1,3];
%
% N.Bozinovic 08/15/08
% Credits Tsung-Han Chan (Virginia Tech)

if nargin < 3 
    threshold = 0.4;
end
if nargin < 4 
    subplotSize = [1, 3];
end

N = size(organList);
N(3) = size(organList,3); % without this line N(3) is not defined if organList containes one image only

% if size(N) == 2  % this is to 
%     N(3) = 1;
% end
if N(3) > subplotSize(1) * subplotSize(2)
    error(['Increase subplot size to ' num2str(N(3)) ' when using function ''Composite''.']);
    return;
end

compositeImage = zeros(N(1), N(2), 3);
thresholdedImage = zeros(N(1), N(2), 3);
% There are 8 color maps
cMap = [1 0 0; 0 1 0; 0 0 1; ...
        0.7 0 0.7; 0 0.7 0.7; 0.7 0.7 0; ...
        0.7 0 0.5; 0 0.7 0.5; 0.7 0.5 0; ....
        0.5 0.5 0.5];

% next four lines are to make sure the N(3) exists so the FOR loop won't crash.
Pos(1);
if size(N,2) < 3
    N(3) = 1;
end

for i = 1:N(3)
     compositeTemp = organList(:,:,i);
     ma = max( compositeTemp(:));
     if ma ~= 0 
        compositeTemp = compositeTemp / ma;
        compositeTemp = compositeTemp .* ( compositeTemp > 0);
     else
        compositeTemp = zeros( N(1), N(2));
     end
     
     subplot(subplotSize(1), subplotSize(2), i);
     PutImage(250*compositeTemp,['component ' num2str(i) ' - '  myTitle]); 
     ma = max( compositeTemp(:));
     mi = min( compositeTemp(:));
     threshTemp = compositeTemp > threshold * ( ma - mi ) + mi;
     %threshTemp = DilateMask( DilateMask( ErodeMask( ErodeMask( threshTemp))));
          
     compositeImage = compositeImage + BWToRGB( compositeTemp, cMap(i,:));
     thresholdedImage = thresholdedImage + BWToRGB( threshTemp, cMap(i,:));
end
% shold be changed
% PutImageAt( compositeImage, ['Composite image - ' myTitle], 3);
% PutImageAt( thresholdedImage, ['Thresholded composite image - ' myTitle], 4);
Pos(3)
imagesc( Scale(compositeImage,0,1));
axis image off
title(['Composite image - ' myTitle]);
Pos(4)
imagesc( thresholdedImage);
axis image off
title(['Thresholded image - ' myTitle]);

if nargout == 1
    varargout(1) = {compositeImage};
elseif nargout == 2
    varargout(1) = {compositeImage};
    varargout(2) = {thresholdedImage};
end
